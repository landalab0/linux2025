[["index.html", "Introducci√≥n a Linux para Bioinform√°tica Cap√≠tulo 1 üß™ Bienvenid@s 1.1 üìö Sobre el taller 1.2 üß∞ ¬øQu√© aprender√°s? 1.3 üåê Plataforma 1.4 üôå Agradecimientos 1.5 üí¨ ¬øDudas o comentarios?", " Introducci√≥n a Linux para Bioinform√°tica LandaLab 2025-09-10 Cap√≠tulo 1 üß™ Bienvenid@s Este repositorio contiene el material del taller ‚ÄúIntroducci√≥n a Linux‚Äù, un espacio abierto para todas las personas que quieran aprender a analizar y visualizar datos con Linux No importa tu edad, formaci√≥n o experiencia previa: si tienes curiosidad y ganas de aprender, este taller es para ti. 1.1 üìö Sobre el taller Lenguaje: Linux Nivel: Principiante Modalidad: Pr√°ctico, con ejercicios guiados y codificaci√≥n en vivo Dirigido a: Cualquier persona interesada en aprender Linux para Bioinform√°tica Requisitos: Ninguno. No necesitas saber programaci√≥n ni instalar ning√∫n programa. S√≥lo necesitas una computadora con acceso a internet 1.2 üß∞ ¬øQu√© aprender√°s? Al finalizar el taller, podr√°s: Comunicarte con Linux a trav√©s de Shell Manipular archivos Crear proyectos Automatizar tareas Escribir scripts reproducibles Comprender los principios b√°sicos del an√°lisis de datos en Linux Descargar secuencias gen√≥micas Instalar programas 1.3 üåê Plataforma Trabajaremos en una plataforma en l√≠nea, por lo que no necesitas instalar nada en tu computadora. El acceso ser√° gratuito y se proporcionar√° durante el taller. 1.4 üôå Agradecimientos Este taller es parte de un esfuerzo por compartir herramientas abiertas, accesibles y colaborativas. Queremos que m√°s personas se acerquen al mundo de los datos y la ciencia sin barreras. ¬°Gracias por formar parte! 1.5 üí¨ ¬øDudas o comentarios? Puedes abrir un Issue o escribirnos durante el taller. ¬°Estamos aqu√≠ para aprender junt@s! "],["introducci√≥n-a-linux.html", "Cap√≠tulo 2 Introducci√≥n a Linux 2.1 Porqu√© aprender a usar Linux y el Shell para Bioinform√°tica 2.2 Sistema operativo, Linux y Shell 2.3 Sistema de ficheros 2.4 C√≥mo accedemos al Shell 2.5 Tipos de archivos", " Cap√≠tulo 2 Introducci√≥n a Linux 2.1 Porqu√© aprender a usar Linux y el Shell para Bioinform√°tica 2.2 Sistema operativo, Linux y Shell 2.3 Sistema de ficheros 2.4 C√≥mo accedemos al Shell 2.5 Tipos de archivos "],["navegar-en-el-sistema-de-ficheros.html", "Cap√≠tulo 3 Navegar en el sistema de ficheros", " Cap√≠tulo 3 Navegar en el sistema de ficheros todo lo de este archivo hasta atajos en el teclado https://github.com/DianaOaxaca/Introduccion_linux_para_bioinformatica/blob/main/Comandos_utiles.md "],["manejo-de-archivos.html", "Cap√≠tulo 4 Manejo de archivos 4.1 C√≥digo reproducible 4.2 Bases de datos y secuencias biol√≥gicas 4.3 Manejo de archivos 4.4 Redireccionamientos y evaluaci√≥n de la integridad 4.5 Transferencia de archivos 4.6 Compresi√≥n y descompresi√≥n 4.7 Explorar archivos 4.8 Ejercicio 02", " Cap√≠tulo 4 Manejo de archivos 4.1 C√≥digo reproducible ‚ÄúLos sucesos √∫nicos no reproducibles, no tienen importancia para la ciencia‚Äù -Karl Popper, the Logic of Scientific, 1959. ¬øQu√© se necesita para reproducir el resultado de un an√°lisis computacional? Los datos: La fuente de donde se descargaron. La versi√≥n de la fuente asociada a ellos. Los programas utilizados para analizarlos: La versi√≥n de cada uno de los programas. Los valores de cada uno de los argumentos utilizados. Argumentos a tener en cuenta para tener buenas pr√°cticas: Actualizaci√≥n de bases de datos. Siempre existir√°n excepciones que no cumplen con las suposiciones de tu c√≥digo. Qu√© un programa genere un resultado no significa que el resultado sea correcto. Todo lo que se te puede olvidar, ¬°se te va a olvidar! Fuente Suposiciones iniciales ¬øQu√© genera esa funci√≥n compleja y rebuscada que parec√≠a una joya en su momento? SIEMPRE, documenta tu c√≥digo Comienza por la organizaci√≥n: La estructura de directorios debe estar organizada, lo mejor es tener un directorio de trabajo por proyecto, los pasos del proyecto se organizar√°n en subdirectorios. La estructura de directorios propuesta para estas asesor√≠as es: Linux Este es el directorio principal del proyecto. data En este directorio van los datos de entrada para el proyecto. src En este directorio van los scripts ya probados y funcionales. results En este directorio van los resultados generados. 4.2 Bases de datos y secuencias biol√≥gicas Base de datos: Es una colecci√≥n organizada de informaci√≥n estructurada, o datos, normalmente almacenados electr√≥nicamente en un sistema inform√°tico. En bioinform√°tica se utilizan diversas bases de datos, algunos ejemplos son: De diversos organismos: NCBI: https://www.ncbi.nlm.nih.gov/ Genomas de referencia NCBI: https://ftp.ncbi.nlm.nih.gov/genomes/refseq/ ENSEMBL: https://www.ensembl.org/index.html UCSC Table Browser: https://genome.ucsc.edu/cgi-bin/hgTables Dedicadas a organismos espec√≠ficos: Ecocyc Flybase Wormbase Especializadas en un tema particular: ENCODE: Elementos funcionales del genoma humano RegulonDB: Regulaci√≥n transcripcional de E. coli Pfam: Familias prote√≠cas miRBase: Secuencias de miRNA y sus blancos Secuencias biol√≥gicas: Archivo que contiene la secuencia de genes, genomas y/o prote√≠nas. Fasta: Se compone de un identificador de la secuencia, seguido (por salto de l√≠nea) de la secuencia de nucle√≥tidos o amino√°cidos de un gene, genoma o prote√≠na. Fastq: Normalmente se conmpone de cuatro lineas por secuencia Line 1 Comienza con ‚Äò@‚Äô seguido del identificador de la secuencia y una descripci√≥n opcional. Line 2 La secuencia cruda nucle√≥tidos. Line 3 Comienza con un ‚Äò+‚Äô opcionalmente incluye el identificador de la secuencia. Line 4 Indica los valores de calidad de la secuencia, debe contener el mismo n√∫mero de s√≠mbolos que el n√∫mero de nucle√≥tidos. De anotaci√≥n: GeneBank o tabulares GFF, GTF, GFF3 Tabulares: Una l√≠nea por cada elemento. Cada l√≠nea DEBE contener 9 campos. Los campos DEBEN estar separados por tabuladores. Todos los campos DEBEN contener un valor, los campos vac√≠os se denotan con ‚Äô.‚Äô seqname Nombre del cromosoma source Nombre del programa que gener√≥ ese elemento feature Tipo de elemento start Posici√≥n de inicio end Posici√≥n de final score Un valor de punto flotante strand La cadena (+ , - ) frame Marco de lectura attribute Pares tag-value, separados por coma, que proveen informaci√≥n adicional Secuencia FASTA &gt;ID_secuencia,metadatos de identificaci√≥n ATGCCCGGTAAAGGATCCCCCCTATGCCGTATAGC &gt;ID_secuencia,metadatos de identificaci√≥n MIPEKRIIRRIQSGGCAIHCQDCSISQLCIPFTLNEHELDQLDNI Secuencia Fastq @SEQ_ID GATTTGGGGTTCAAAGCAGTATCGATCAAATAGTAAATCCATTTGTTCAACTCACAGTTT + !&#39;&#39;*((((***+))%%%++)(%%%%).1***-+*&#39;&#39;))**55CCF&gt;&gt;&gt;&gt;&gt;&gt;CCCCCCC65 Agunos foros para pedir ayuda: Stackoverflow: https://stackoverflow.com/ Biostars: https://www.biostars.org/ Researchgate: https://www.researchgate.net/ IAs 4.3 Manejo de archivos wget, curl, shasum, md5sum, diff, scp, rsync, gunzip, unzip, tar, head, tail, more, less, cat, &gt;, &gt;&gt;, nano Link para el genoma de Raoultella terrigena: https://ftp.ncbi.nlm.nih.gov/genomes/refseq/bacteria/Raoultella_terrigena/reference/GCF_012029655.1_ASM1202965v1/ Para descargar archivos a nuestra computadora desde la terminal, se requiere utilizar protocolos de transferencia, los comandos wget o curl funcionan para ello. Ve√°mos un ejemplo: Crea el directorio principal de trabajo para este proyecto y sus subdirectorios asociados. Accede al directorio data Descarga el genoma representativo de Raoultella terrigena de la Refseq de NCBI Ahora descarga las secuencias prote√≠cas ¬øNotaste alg√∫n cambio? - Vuelve a descargar el genoma de Raoultella terrigena, pero ahora aseg√∫rate de guardar la secuencia en un archivo llamado Raoultella_terrigena.fasta.gz wget https://ftp.ncbi.nlm.nih.gov/genomes/refseq/bacteria/Raoultella_terrigena/reference/GCF_012029655.1_ASM1202965v1/GCF_012029655.1_ASM1202965v1_genomic.fna.gz Descarga el archivo de amino√°cidos de Raoultella terrigena con el nombre Raoultella_terrigena.faa.gz wget -O Raoultella_terrigena.faa.gz https://ftp.ncbi.nlm.nih.gov/genomes/refseq/bacteria/Raoultella_terrigena/reference/GCF_012029655.1_ASM1202965v1/GCF_012029655.1_ASM1202965v1_protein.faa.gz ¬øQu√© ocurri√≥? curl Realiza la misma funci√≥n b√°sica que wget , las diferencias principales son: El output lo imprime a standar output, imprime varias estad√≠sticas √∫tiles sobre la descarga. curl https://ftp.ncbi.nlm.nih.gov/genomes/refseq/bacteria/Raoultella_terrigena/reference/GCF_012029655.1_ASM1202965v1/GCF_012029655.1_ASM1202965v1_protein.faa.gz Con curl curl https://ftp.ncbi.nlm.nih.gov/genomes/refseq/bacteria/Raoultella_terrigena/reference/GCF_012029655.1_ASM1202965v1/GCF_012029655.1_ASM1202965v1_protein.faa.gz &gt; Raoultella_terrigena2.faa.gz ¬øC√≥mo comprobamos que dos archivos son id√©nticos? Hemos descargado dos veces la secuencia gen√≥mica de Raoultella terrigena. Comprobemos que ambos archivos son id√©nticos. Prueba con diff -s diff GCF_012029655.1_ASM1202965v1_genomic.fna.gz Raoultella_terrigena.fasta.gz ¬øY si comparas el faa vs fasta? diff ../data/Raoultella_terrigena.faa.gz ../data/Raoultella_terrigena.fasta.gz 4.4 Redireccionamientos y evaluaci√≥n de la integridad &gt; Permite direccionar un resultado a un archivo nuevo. Crea el archivo si no existe y lo sobre escribe si existe. &gt;&gt; Permite redireccionar un resultado en pantalla o un archivo a otro, sin remplazar o sobreescribir. Crea el archivo si no existe y agrega el nuevo contenido al final, si el archivo existe. shasum y md5sum son programas que generan una suma encriptada √∫nica para cada archivo. Revisemos la integridad de los archivos, descarga el archivo md5checksums.txt del directorio genomes/refseq/bacteria/Raoultella terigena de NCBI curl https://ftp.ncbi.nlm.nih.gov/genomes/refseq/bacteria/Raoultella_terrigena/reference/GCF_012029655.1_ASM1202965v1/md5checksums.txt &gt; md5sum_R.terrigena.txt shasum Raoultella_terrigena.fasta.gz md5sum Raoultella_terrigena.fasta.gz cat md5sum_R.terrigena.txt Redireccionemos los resultados de integridad a un archivo nuevo. md5sum Raoultella_terrigena.fasta.gz &gt; ../resuts/R.terrigena.md5sum.check cat ../results/R.terrigena.msd5sum.check cat md5sum_R.terrigena.txt &gt;&gt; ../results/R.terrigena.md5sum.check cat ../results/R.terrigena.msd5sum.check 4.5 Transferencia de archivos Esta parte no la vamos a practicar porque estamos usando una interfaz gr√°fica con acceso al servidor, pero si no tienes esta forma de acceso es necesario usar estos comandos, asi que te dejamos el ejemplo. :) `scp` [FUENTE][DESTINO] #FUENTE=Nombre del archivo que quieres transferir #DESTINO=Ruta de destino #Ejemplo de mi computadora al servidor: scp md5sum_R.terrigena.txt hoaxaca@132.248.220.35:/space31/PEG/hoaxaca #Me pedir√° el password #Funciona de manera inversa si quieres bajar del servidor a tu computadora scp hoaxaca@132.248.220.35:/space31/PEG/hoaxaca/md5sum_R.terrigena.txt .#ojo el destino puede ser con ruta absoluta o relativa, aqu√≠ fue relativa &quot;.&quot; #Tambi√©n puedes usar rsync `rsync -e ssh` [FUENTE][DESTINO] # -e ssh indica que nos conectaremos al servidor a trav√©s de una conexi√≥n de tipo ssh 4.6 Compresi√≥n y descompresi√≥n Para descomprimir archivos usamos gunzip. gunzip Raoultella_terrigena.fasta.gz gunzip *.gz Para comprimir usamos gzip. gzip *.f* ¬øY si quiero comprimir directorios? Para ello utilizo tar que es un m√©todo de ultra compresi√≥n, muy utilizada en datos gen√≥micos. Vamos a comprimir el directorio practica1 cd ../../ tar cvzf practica1.tar.gz practica1/ # c = crea un nuevo directorio # v = muestra el progreso dde la compresi√≥n # z = genera un archivo comprimido en zip (.gz) # f = para indicar el nombre del archivo comprimido Y para descomprimir? rm -r practica1/ tar -xvf practica1.tar.gz # ¬øqu√© hace el flag x? 4.7 Explorar archivos Veamos las primeras l√≠neas del archivo de anotaci√≥n .gtf del genoma de Raoultella terrigena ¬øY, cu√°l es ese, lo tenemos? Vamos a descargarlo wget -O Raoultella_terrigena.gtf.gz https://ftp.ncbi.nlm.nih.gov/genomes/refseq/bacteria/Raoultella_terrigena/reference/GCF_012029655.1_ASM1202965v1/GCF_012029655.1_ASM1202965v1_genomic.gtf.gz Luego a descomprimirlo gunzip Raoultella_terrigena.gtf.gz Ahora si head Raoultella_terrigena.gtf ¬øY si quiero ver las primeras 20 lineas? head -n 20 Raoultella_terrigena.gtf Ahora quiero ver las √∫ltimas l√≠neas de un archivo tail Raoultella_terrigena.gtf Veamos el genoma more Raoultella_terrigena.fasta # Enter =&gt; Navegar hacia abajo de l√≠nea en l√≠nea # Espacio =&gt; Navega hacia abajo de pantalla en pantalla Pero podemos ver archivos con algo m√°s potente less Raoultella_terrigena.gtf Espacio OR Enter =&gt; Navegar hacia abajo b OR flecha arriba =&gt; Navegar hacia arriba /WORD =&gt; B√∫squeda forward n =&gt; Siguiente ?WORD =&gt; B√∫squeda backward N =&gt; Anterior G =&gt; Ir al final del archivo g =&gt; Ir al inicio del archivo -S =&gt; Mostrar una l√≠nea por rengl√≥n 4.8 Ejercicio 02 Est√°s realizando tu proyecto con Raoultella terrigena y tu directora de tesis te pregunta si hay genes nitrogenasa ubicados en la posici√≥n 501417 o 3010433 del genoma representativo de los genomas de referencia de esta especie. T√∫ debes responderle si est√°n o no en esa posici√≥n, y si no est√°n, avisarle en qu√© posici√≥n se encuentran y cu√°ntos son. Pseudoc√≥digo Es la manera en la que planeas, dise√±as la ruta de trabajo que usar√°s para responder una pregunta. Es el dise√±o experimental. Pseudoc√≥digo: Crea el directorio sesion02 dentro del directorio results Descarga el archivo de anotaci√≥n .gff de Raoultella terrigena en el directorio correspondiente. Revisa su integridad y redirecciona el resultado al directorio correspondiente Descomprime el archivo de anotaci√≥n Navega al final del archivo Navega al inicio del archivo Busca el gene que inicie en la posici√≥n 501417 Busca el CDS que termine en la posici√≥n 3010433 Busca los genes nitrogenasa Escribe los resultados "],["filtrar-informaci√≥n.html", "Cap√≠tulo 5 Filtrar informaci√≥n 5.1 Recordatorio: Comandos B√°sicos 5.2 Introducci√≥n a los Comandos 5.3 Features en el Genoma 5.4 Ejercicios", " Cap√≠tulo 5 Filtrar informaci√≥n En esta sesi√≥n, exploraremos los comandos |, sort, cut, uniq, wc y grep para analizar el genoma de Raoultella terrigena. Estos comandos son esenciales para procesar datos en la terminal de manera eficiente. 5.1 Recordatorio: Comandos B√°sicos Lista los contenidos del directorio ra√≠z y busca si existe un directorio llamado home usando less: ls / ls / | less # Resultado esperado: /home Lista los primeros 10 archivos del directorio ra√≠z: ls / | head -10 Lista los √∫ltimos 5 archivos del directorio ra√≠z: ls / | tail -5 5.2 Introducci√≥n a los Comandos Pipe (|): Permite conectar la salida de un programa con la entrada de otro, procesando datos en RAM para mayor rapidez, evitando escritura/lectura en disco. A diferencia de &amp;&amp;, que ejecuta comandos independientes, | requiere que la salida de un comando sea la entrada del siguiente. sort: Ordena l√≠neas de texto. cut: Extrae secciones de cada l√≠nea. uniq: Filtra l√≠neas repetidas (requiere que el archivo est√© ordenado). wc: Cuenta l√≠neas, palabras, caracteres o bytes. grep: Busca patrones en archivos. Estructura de un Archivo de Anotaci√≥n (GFF) Un archivo GFF tiene las siguientes columnas: seqname: Nombre del cromosoma. source: Programa que gener√≥ el elemento. feature: Tipo de elemento (e.g., gene, CDS). start: Posici√≥n de inicio. end: Posici√≥n de final. score: Valor de punto flotante. strand: Cadena (+, -). frame: Marco de lectura. attribute: Pares tag-value con informaci√≥n adicional. 5.3 Features en el Genoma Tama√±o del Genoma de Raoultella terrigena ¬øQu√© archivo necesitamos? El archivo Raoultella_terrigena.fasta. ¬øQu√© comando nos ayuda? wc data/Raoultella_terrigena.fasta Nota: Este comando da una estimaci√≥n aproximada, ya que incluye bytes del encabezado y saltos de l√≠nea. Guarda los resultados en un archivo: mkdir -p results/sesion3 echo &#39;El genoma de Raoultella puede medir:&#39; &gt; results/sesion3/Raoultella_caracteristicas.txt wc data/Raoultella_terrigena.fasta &gt;&gt; results/sesion3/Raoultella_caracteristicas.txt N√∫mero de Cromosomas ¬øQu√© archivo necesitamos? El archivo Raoultella_terrigena.gff. ¬øQu√© comando nos ayuda? cut -f1 data/Raoultella_terrigena.gff | head Nota: El resultado incluye las 8 l√≠neas del encabezado. Para excluirlas: grep -v &quot;#&quot; data/Raoultella_terrigena.gff | cut -f1 | sort | uniq Guarda el resultado echo &#39;El genoma de Raoultella tiene un cromosoma y es&#39; &gt;&gt; results/sesion3/Raoultella_caracteristicas.txt grep -v &quot;#&quot; data/Raoultella_terrigena.gff | cut -f1 | uniq &gt;&gt; results/sesion3/Raoultella_caracteristicas.txt N√∫mero de features ¬øQu√© archivo necesitamos? El archivo Raoultella_terrigena.gff. ¬øQu√© comandos requerimos? cut -f3 data/Raoultella_terrigena.gff | uniq Nota: uniq requiere que las l√≠neas est√©n ordenadas. Prueba: cut -f3 data/Raoultella_terrigena.gff | sort | uniq # Alternativa: cut -f3 data/Raoultella_terrigena.gff | sort -u N√∫mero de tipos de features cut -f3 data/Raoultella_terrigena.gff | sort -u | wc -l Quita las lineas comentadas Fuentes de los datos de anotaci√≥n cut -f2 data/Raoultella_terrigena.gff | sort -u N√∫mero de genes y CDS Pseudoc√≥digo Acceder a la columna 3 (feature). Contar ocurrencias √∫nicas de cada elemento. cut -f3 data/Raoultella_terrigena.gff | sort | uniq -c Para evitar contar elementos repetidos: cut -f3-5 data/Raoultella_terrigena.gff | sort -u | cut -f1 | sort | uniq -c Genes por cadena Pseudoc√≥digo Cortar las columnas feature y strand. Ordenar y contar ocurrencias √∫nicas. cut -f3,7 data/Raoultella_terrigena.gff | sort | uniq -c Crea un archivo de anotaci√≥n ordenado por cadena y por regi√≥n gen√≥mica Pseudoc√≥digo Acceder a las columnas de cadena (strand) y posiciones gen√≥micas. Ordenar por cadena y luego por posici√≥n (num√©ricamente). sort -k7,7 -k4,4n data/Raoultella_terrigena.gff &gt; results/R_terrigena_strand.gff Cu√°ntos genes hay con diferente nombre? Pseudoc√≥digo Filtrar registros de tipo gene. Acceder a la columna 9 (atributos). Separar por ; y extraer nombres. Contar valores √∫nicos. grep -P &quot;\\tgene\\t&quot; data/Raoultella_terrigena.gff | cut -f9 | cut -d &#39;;&#39; -f3 | sort -u | wc -l 5.4 Ejercicios 1. Cu√°ntos genes hay con distinto ID? Pseudoc√≥digo Filtrar registros de tipo gene. Acceder a la columna 9. Separar por ; y =, qued√°ndote con el ID. Contar valores √∫nicos. 2. Cu√°ntas secuencias prote√≠cas? Tip: usa el archivo de proteinas 3. Cu√°nto mide la secuencia de la prote√≠na WP_000448832.1? Pseudoc√≥digo Localizar el ID WP_000448832.1. Extraer la secuencia y contar caracteres. Cu√°l es el ID del gene fnr "],["obtener-m√°s-informaci√≥n.html", "Cap√≠tulo 6 Obtener m√°s informaci√≥n 6.1 Descargar secuencias fastq 6.2 Calcular contenido de GC 6.3 Isntalar ambientes conda", " Cap√≠tulo 6 Obtener m√°s informaci√≥n En esta sesi√≥n, exploraremos los comandos sed, tr y ciclos for. Adem√°s aprenderemos a crear ambientes de conda e instalar programas dentro de este. 6.1 Descargar secuencias fastq 6.1.1 Subir archivos al servidor Trabajaremos con datos de amplicones de la regi√≥n V3-V4 del 16S rRNA de muestras tres tiempos de fermentaci√≥n del pulque, estos se obtuvieron con una plataforma ILLUMINA MiSeq (2 x 300 pb) y est√°n en formato FASTQ. Los datos fueron depositados en NCBI y ENA bajo el BioProject PRJEB13870 del art√≠culo Deep microbial community profiling along the fermentation process of pulque, a biocultural resource of Mexico. Vamos a descargar el reporte del BioProject para obtener las ligas de descarga de cada librer√≠a, descarguemos el archivo tsv del reporte que se encuentra en la siguiente liga: https://www.ebi.ac.uk/ena/browser/view/PRJNA556980 Ve a la terminal de tu computadora y sit√∫ate en el directorio en donde se descarg√≥ el reporte. cd ~/Downloads/ ls ~/Downloads/reporte.txt El reporte que descargamos nos servir√° para obtener los archivos fastq de cada librer√≠a secuenciada, pero necesitamos tenerlos en el servidor y no en nuestra m√°quina local. As√≠ que vamos a subir el reporte al servidor. Con scp podemos hacer copias de la computadora al servidor y visceversa. Sit√∫ate en la terminal de tu m√°quina local, justo en el directorio donde se encuentra el archivo que acabamos de descargar: #Para subir archivos scp -P 7915 reporte.txt [USUARIO]@IP:/ruta/data #Para descargar archivos #scp -P 7915 [USUARIO]@132.248.15.30:/botete/[USUARIO]/amplicones/data/[archivo] . 6.1.2 Filtrar s√≥lo la informaci√≥n √∫til Ahora regresa a la terminal del servidor y lista el contenido del directorio data Podemos ver que el reporte se aloja en este directorio. less -S reporte.txt Podemos notar que contiene la informaci√≥n de todas las librer√≠as que se secuenciaron en el proyecto, sin embargo, a nosotros s√≥lo nos interesan los que son de amplicones del 16S rRNA. As√≠ que nos quedaremos s√≥lo con esta informaci√≥n. ¬øCu√°ntas de estas corresponden a its? Averigua en la ayuda de grep que hacen las banderas --color -c -v grep --color &#39;its&#39; data/reporte.txt grep -c &#39;its&#39; data/reporte.txt grep -v &#39;its&#39; data/reporte.txt grep -c -v &#39;its&#39; data/reporte.txt La informaci√≥n que necesitamos para descargar los fastq son: el nombre de la muestra y la liga de descarga. Esta informaci√≥n se encuentra en las columnas experiment_title y fastq_ftp cut -f3,6 reporte.txt Recordemos especificar el delimitador de las columnas usando la bandera -d. cut -f3,6 reporte.txt| cut -d&#39; &#39; -f4-7 | grep -v &#39;its&#39; :o Ahora si contiene s√≥lo la informaci√≥n de las librer√≠as del 16S, sin embargo a√∫n nos falta un poco‚Ä¶ Si recordamos, cada librer√≠a est√° pareada, si notamos el contenido de la columna 2 veremos que hay dos ligas de descarga separadas por un ; as√≠ que necesitamos obtener cada liga por separado. sed nos ayuda a sustituir patrones de texto o caracteres. cut -f3,6 reporte.txt| cut -d&#39; &#39; -f4-7 | grep -v &#39;its&#39; | sed &#39;s/;/\\n\\t/g&#39; | grep -v &#39;experiment&#39; &gt; data/reporte_16S.txt 6.1.3 Obtener las secuencias Recordemos que wget permite descargar archivos de la web al servidor o a la m√°quina local. Pero como son varios los archivos que necesitamos, haremos un ciclo for que nos ayude a optimizar esta tarea. for fq in $(cut -f2 data/reporte_16S.txt); do wget $fq data/; done Lista el contenido de tu directorio data, ¬øqu√© contiene? 6.1.4 Verificar la integridad de las secuencias Obtengamos el identificador md5 desde el reporte de los datos Con tr podemos cambiar car√°cteres: Traducir un caracter a otro echo &quot;este es un ejemplo&quot; | tr &#39;e&#39; &#39;a&#39; Podemos especificar rangos de caracteres echo &quot;este es un ejemplo&quot; | tr a-z A-Z O clases de caracteres echo &quot;este es un ejemplo&quot; | tr [:lower:] [:upper:] Veamos ‚Ä¶ cut -f3,5 reporte.txt | cut -d&#39; &#39; -f4-7 | grep -v &#39;its&#39; | tr&#39;;&#39; &#39;\\n&#39; | grep -v &#39;experiment&#39; | cut -f2 Ahora generemos el identificador de los datos que ya descargamos Entra al directorio data md5sum SRR9849602_1.fastq.gz Pero otra vez son muchos, hagamos un ciclo for para esto: for gz in $(ls *.gz); do md5sum $gz ; done Nota: Tambi√©n podr√≠amos descargar todos los archivos de un BioProject de NCBI #fastq-dump --split-files SRR1234567 6.2 Calcular contenido de GC Calcula el porcentaje de GC del gene nifH de Raoultella terrigena. (Se suma la cantidad de G + C y se divide entre la longitud de la secuencia) Descargar el archivo de genes del genoma representativo de Raoultella terrigena Algoritmo: Obtener el archivo de secuencias codificantes de R. terrigena Obtener la secuencia del gene nifH Calcular la longitud de la secuencia Calcular el contenido de GC Calcular el porcentaje de GC del gene nifH Obtener el archivo de secuencias codificantes de R. terrigena wget -O Raoultella_terrigena.cds.gz https://ftp.ncbi.nlm.nih.gov/genomes/refseq/bacteria/Raoultella_terrigena/reference/GCF_012029655.1_ASM1202965v1/GCF_012029655.1_ASM1202965v1_cds_from_genomic.fna.gz data/ No olvides descomprimir Obtener la secuencia del gene nifH 2.1 identificar al gene de inter√©s grep nifH data/Raoultella_terrigena.cds 2.2 Definir como obtendr√© la secuencia, hay varias formas, propongo una muy f√°cil, con seqtk. Pero como no tenemos seqtk pues vamos a instalarlo ‚Ä¶ Ve a la secci√≥n de instalci√≥n 2.2.1 Obtener el identificador de la secuencia sin caracteres especiales grep nifH data/Raoultella_terrigena.cds | sed &#39;s/&gt;//g&#39; &gt; results/nif_headers.txt 2.2.2 Obtener la secuencia seqtk subseq data/Raoultella_terrigena.cds results/nif_headers.txt &gt; results/nif.fasta Ahora si, revisa el contenido del archivo que generamos 3.1 Calcular la longitud de la secuencia grep -v &#39;&gt;&#39; results/nifH.fasta | tr -d &#39;\\n&#39; | wc -c &gt;&gt; results/GC_nifH.txt 3.2 Calcular el contenido de GC grep -v &#39;&gt;&#39; results/nifH.fasta | tr -d &#39;\\n&#39; | tr [CG] &#39;\\n&#39; | wc Comprobemos con el de AT grep -v &#39;&gt;&#39; results/nifH.fasta | tr -d &#39;\\n&#39; | tr [AT] &#39;\\n&#39; | wc 6.3 Isntalar ambientes conda Usaremos conda que es la herramienta m√°s com√∫n para la gesti√≥n de entornos de software y paquetes en bioinform√°tica. conda create --name seqtk_env seqtk -c bioconda -y conda create: Este comando inicia el proceso de creaci√≥n de un nuevo ambiente. --name seqtk_env: Asigna el nombre seqtk_env al nuevo ambiente. Se puede cambiar el nombre. seqtk: Es el nombre del programa que queremos instalar. Conda buscar√° el paquete seqtk en sus canales. -c bioconda: Le indica a Conda que busque el paquete en el canal de Bioconda, que es el repositorio principal para herramientas de bioinform√°tica. -y: Responde ‚Äús√≠‚Äù autom√°ticamente a la pregunta de confirmaci√≥n, lo que hace que el proceso sea m√°s r√°pido y no interactivo. seqtk es una herramienta de l√≠nea de comandos de prop√≥sito general para el procesamiento de secuencias en formato FASTA/Q. Fue desarrollado por Heng Li y es conocido por ser muy r√°pido y eficiente, lo que lo hace ideal para tareas como: Convertir archivos de FASTA a FASTQ y viceversa. Muestrear (submuestrear) secuencias aleatoriamente. Filtrar secuencias por longitud. Es una herramienta fundamental en muchos flujos de trabajo de bioinform√°tica para la manipulaci√≥n de datos de secuenciaci√≥n de alto rendimiento. Una vez que el comando anterior termine de ejecutarse, el ambiente estar√° creado. Para empezar a usar seqtk, necesitas activar el ambiente: conda activate seqtk_env Cuando termines de usar seqtk, puedes desactivar el ambiente para volver a tu entorno base: conda deactivate "],["en-construcci√≥n.html", "Cap√≠tulo 7 En construcci√≥n", " Cap√≠tulo 7 En construcci√≥n "],["en-construcci√≥n-tambi√©n.html", "Cap√≠tulo 8 En construcci√≥n tambi√©n", " Cap√≠tulo 8 En construcci√≥n tambi√©n "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
